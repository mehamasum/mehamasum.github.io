{"version":3,"sources":["webpack:///./src/components/layouts/Section.js","webpack:///./src/components/layouts/Layout.js","webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/seo/Facebook.jsx","webpack:///./src/components/seo/Twitter.jsx","webpack:///./src/components/seo/SEO.jsx","webpack:///./src/assets/images/avatar.jpg","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layouts/Header.js","webpack:///./src/components/layouts/Footer.js"],"names":["Section","render","react_default","a","createElement","style","paddingTop","paddingBottom","minHeight","className","Col","sm","this","props","children","React","Component","Layout","SEO","Header","location","layouts_Section","Footer","NotFoundPage","layouts_Layout","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","data","query","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","Facebook","_ref","url","type","title","desc","image","fbAppId","Helmet_default","property","content","defaultProps","Twitter","username","name","_this$props","banner","pathname","article","gatsby_browser_entry","_props$site","site","buildTime","_props$site$siteMetad","siteMetadata","defaultTitle","titleAlt","shortName","author","siteLanguage","logo","siteUrl","pathPrefix","defaultDescription","description","defaultBanner","twitter","seo","schemaOrgJSONLD","@context","@type","@id","alternateName","headline","datePublished","dateModified","publisher","isPartOf","mainEntityOfPage","Fragment","lang","JSON","stringify","seo_Facebook","seo_Twitter","_2757271287","bool","p","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","InternalPageRenderer","Object","assign","json","shape","getClassNames","tab","path","classes","push","RegExp","test","classnames","react__WEBPACK_IMPORTED_MODULE_2___default","react_bootstrap__WEBPACK_IMPORTED_MODULE_4__","xs","alt","src","avatar","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","react__WEBPACK_IMPORTED_MODULE_1___default","backgroundColor","react_bootstrap__WEBPACK_IMPORTED_MODULE_3__","md","margin","gatsby__WEBPACK_IMPORTED_MODULE_2__","color","href","target","marginRight"],"mappings":"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","file":"component---src-pages-404-js-c1b427f7c4562bad818b.js","sourcesContent":["import React from 'react'\nimport { Grid, Row, Col } from 'react-bootstrap'\nimport '../../styles/index.scss'\n\nclass Section extends React.Component {\n  render() {\n    return (\n      <section\n        style={{\n          paddingTop: '1em',\n          paddingBottom: '1em',\n          minHeight: '300px',\n        }}\n      >\n        <div className=\"layoutRow\">\n          <Col sm={12}>{this.props.children}</Col>\n        </div>\n      </section>\n    )\n  }\n}\n\nexport default Section\n","import React from 'react'\nimport '../../styles/index.scss'\nimport SEO from '../../components/seo/SEO'\nimport Header from './Header'\nimport Footer from './Footer'\nimport Section from './Section'\n\nclass Layout extends React.Component {\n  render() {\n    return (\n      <div>\n        <SEO />\n        <Header {...this.props.location} />\n        <Section>{this.props.children}</Section>\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","import React from 'react'\nimport Layout from '../components/layouts/Layout'\n\nclass NotFoundPage extends React.Component {\n  render() {\n    return (\n      <Layout location={this.props.location}>\n        <h1>Not Found</h1>\n        <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n      </Layout>\n    )\n  }\n}\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport Helmet from 'react-helmet'\n\nconst Facebook = ({ url, type, title, desc, image, fbAppId }) => (\n  <Helmet>\n    {fbAppId && <meta property=\"fb:app_id\" content={fbAppId} />}\n    {url && <meta property=\"og:url\" content={url} />}\n    {type && <meta property=\"og:type\" content={type} />}\n    {title && <meta property=\"og:title\" content={title} />}\n    {desc && <meta property=\"og:description\" content={desc} />}\n    {image && <meta property=\"og:image\" content={image} />}\n  </Helmet>\n)\n\nexport default Facebook\n\nFacebook.propTypes = {\n  url: PropTypes.string,\n  type: PropTypes.string,\n  title: PropTypes.string,\n  desc: PropTypes.string,\n  image: PropTypes.string,\n}\n\nFacebook.defaultProps = {\n  url: null,\n  type: null,\n  title: null,\n  desc: null,\n  image: null,\n}\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport Helmet from 'react-helmet'\n\nconst Twitter = ({ type, username, title, desc, image }) => (\n  <Helmet>\n    <meta name=\"twitter:card\" content={type} />\n    {username && <meta name=\"twitter:site\" content={username} />}\n    {username && <meta name=\"twitter:creator\" content={username} />}\n    {title && <meta name=\"twitter:title\" content={title} />}\n    {desc && <meta name=\"twitter:description\" content={desc} />}\n    {image && <meta name=\"twitter:image\" content={image} />}\n    {image && <meta name=\"twitter:image:alt\" content={title} />}\n  </Helmet>\n)\n\nexport default Twitter\n\nTwitter.propTypes = {\n  type: PropTypes.string,\n  username: PropTypes.string,\n  title: PropTypes.string,\n  desc: PropTypes.string,\n  image: PropTypes.string,\n}\n\nTwitter.defaultProps = {\n  type: 'summary_large_image',\n  username: null,\n  title: null,\n  desc: null,\n  image: null,\n}\n","import React, { Component } from 'react'\nimport Helmet from 'react-helmet'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Facebook from './Facebook'\nimport Twitter from './Twitter'\n\nexport default class SEO extends Component {\n  render() {\n    const { title, desc, banner, pathname, article } = this.props\n    return (\n      <StaticQuery\n        query={query}\n        render={props => {\n          const {\n            site: {\n              buildTime,\n              siteMetadata: {\n                title: defaultTitle,\n                titleAlt,\n                shortName,\n                author,\n                siteLanguage,\n                logo,\n                siteUrl,\n                pathPrefix,\n                description: defaultDescription,\n                banner: defaultBanner,\n                twitter,\n                fbAppId,\n              },\n            },\n          } = props\n\n          const seo = {\n            title: title || defaultTitle,\n            description: defaultDescription || desc,\n            image: `${siteUrl}${banner || defaultBanner}`,\n            url: `${siteUrl}${pathname || '/'}`,\n          }\n\n          const realPrefix = pathPrefix === '/' ? '' : pathPrefix\n\n          let schemaOrgJSONLD = [\n            {\n              '@context': 'http://schema.org',\n              '@type': 'WebSite',\n              '@id': siteUrl,\n              url: siteUrl,\n              name: defaultTitle,\n              alternateName: titleAlt || '',\n            },\n          ]\n\n          if (article) {\n            schemaOrgJSONLD = [\n              {\n                '@context': 'http://schema.org',\n                '@type': 'BlogPosting',\n                '@id': seo.url,\n                url: seo.url,\n                name: title,\n                alternateName: titleAlt || '',\n                headline: title,\n                image: {\n                  '@type': 'ImageObject',\n                  url: seo.image,\n                },\n                description: seo.description,\n                datePublished: buildTime,\n                dateModified: buildTime,\n                author: {\n                  '@type': 'Person',\n                  name: author,\n                },\n                publisher: {\n                  '@type': 'Organization',\n                  name: author,\n                  logo: {\n                    '@type': 'ImageObject',\n                    url: siteUrl + realPrefix + logo,\n                  },\n                },\n                isPartOf: siteUrl,\n                mainEntityOfPage: {\n                  '@type': 'WebSite',\n                  '@id': siteUrl,\n                },\n              },\n            ]\n          }\n\n          return (\n            <React.Fragment>\n              <Helmet title={seo.title}>\n                <html lang={siteLanguage} />\n                <meta name=\"description\" content={seo.description} />\n                <meta name=\"image\" content={seo.image} />\n                <meta name=\"apple-mobile-web-app-title\" content={shortName} />\n                <meta name=\"application-name\" content={shortName} />\n                <script type=\"application/ld+json\">\n                  {JSON.stringify(schemaOrgJSONLD)}\n                </script>\n              </Helmet>\n              <Facebook\n                desc={seo.description}\n                image={seo.image}\n                title={seo.title}\n                type={article ? 'article' : 'website'}\n                url={seo.url}\n                fbAppId={fbAppId}\n              />\n              <Twitter\n                title={seo.title}\n                image={seo.image}\n                desc={seo.description}\n                username={twitter}\n              />\n            </React.Fragment>\n          )\n        }}\n      />\n    )\n  }\n}\n\nSEO.propTypes = {\n  title: PropTypes.string,\n  desc: PropTypes.string,\n  banner: PropTypes.string,\n  pathname: PropTypes.string,\n  article: PropTypes.bool,\n}\n\nSEO.defaultProps = {\n  title: null,\n  desc: null,\n  banner: null,\n  pathname: null,\n  article: false,\n}\n\nconst query = graphql`\n  query SEO {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD\")\n      siteMetadata {\n        defaultTitle: title\n        titleAlt\n        shortName\n        author\n        siteLanguage\n        logo\n        siteUrl: url\n        pathPrefix\n        defaultDescription: description\n        defaultBanner: banner\n        twitter\n        fbAppId\n      }\n    }\n  }\n`\n","module.exports = __webpack_public_path__ + \"static/avatar-6a363dcb06efcdb621bda3f525dfda2b.jpg\";","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport { Grid, Row, Col } from 'react-bootstrap'\nimport avatar from '../../assets/images/avatar.jpg'\nimport '../../styles/index.scss'\nimport classnames from 'classnames'\n\nclass Header extends React.Component {\n  getClassNames(tab) {\n    const path = this.props.pathname\n    let classes = ['label']\n    if (tab === 'project') {\n      classes.push('label-project')\n      if (path === '/') classes.push('label-active')\n    } else if (tab === 'about') {\n      classes.push('label-about')\n      const pattern = new RegExp(`^\\/about(\\/)?$`)\n      if (pattern.test(path)) classes.push('label-active')\n    } else if (tab === 'blog') {\n      classes.push('label-blog')\n      const pattern = new RegExp(`^\\/blog(\\/)?.*$`)\n      if (pattern.test(path)) classes.push('label-active')\n    }\n    return classnames(classes)\n  }\n\n  render() {\n    return (\n      <header>\n        <div className=\"portfolio-cover\" />\n        <div className=\"layoutRow\">\n          <Col xs={12}>\n            <div className=\"portfolio-user\">\n              <div className=\"portfolio-user-photo\">\n                <img\n                  alt=\"Mehedi Hasan Masum's avatar\"\n                  className=\"user-photo\"\n                  src={avatar}\n                />\n              </div>\n\n              <div className=\"portfolio-user-info\">\n                {this.props.title || (\n                  <h1 className=\"portfolio-user-name\">\n                    Mehedi Hasan Masum <small>(@mehamasum)</small>\n                  </h1>\n                )}\n                <nav>\n                  <Link to=\"/\">\n                    <div className={this.getClassNames('project')}>\n                      Projects\n                    </div>\n                  </Link>\n\n                  <Link to=\"/about\">\n                    <div className={this.getClassNames('about')}>About</div>\n                  </Link>\n\n                  <Link to=\"/blog\">\n                    <div className={this.getClassNames('blog')}>Blog</div>\n                  </Link>\n                </nav>\n              </div>\n            </div>\n          </Col>\n        </div>\n      </header>\n    )\n  }\n}\n\nexport default Header\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { Row, Col } from 'react-bootstrap'\nimport '../../styles/index.scss'\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer\n        style={{\n          backgroundColor: '#e6e6e6',\n          paddingTop: '4em',\n          paddingBottom: '4em',\n        }}\n      >\n        <div className=\"layoutRow\">\n          <Col xs={12} md={6} className=\"footer-left-panel\">\n            <span\n              style={{\n                margin: 0,\n              }}\n            >\n              Made by <Link to=\"#\"> meha</Link>{' '}\n              <i\n                className=\"fa fa-heart\"\n                style={{\n                  color: 'red',\n                }}\n              />\n            </span>\n          </Col>\n          <Col xs={12} md={6} className=\"footer-right-panel\">\n            <a href=\"https://github.com/mehamasum/gatsby-blog\" target=\"_blank\">\n              <i\n                className=\"fa fa-code-fork\"\n                style={{\n                  marginRight: '0.5rem',\n                }}\n              />\n              Fork me on Github\n            </a>\n          </Col>\n        </div>\n      </footer>\n    )\n  }\n}\n\nexport default Footer\n"],"sourceRoot":""}