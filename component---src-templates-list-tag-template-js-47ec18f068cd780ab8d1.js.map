{"version":3,"sources":["webpack:///./src/templates/ListTagTemplate.js","webpack:///./src/components/Tag/Tag.js","webpack:///./src/components/PostSummary/PostSummary.js","webpack:///./src/components/Pagination/Pagination.js","webpack:///./src/components/PostList/BlogList.js","webpack:///./src/components/Breadcrumb/Breadcrumb.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_Breadcrumb_Breadcrumb__WEBPACK_IMPORTED_MODULE_1__","_components_PostList_BlogList__WEBPACK_IMPORTED_MODULE_2__","ListTagTemplate","props","tag","pageContext","totalCount","data","allMarkdownRemark","tagHeader","a","createElement","location","topContent","Fragment","links","url","label","Tag","render","react__WEBPACK_IMPORTED_MODULE_1___default","className","this","external","href","target","style","textDecoration","color","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","React","Component","Summary","post","title","frontmatter","fields","slug","date","category","timeToRead","spoiler","margin","backgroundImage","thumbnail","renderButton","context","dir","react_default","gatsby_browser_entry","rel","Pagination","previous","next","current","total","BlogList","_data$site$siteMetada","site","siteMetadata","blogTitle","blogSlogan","posts","author","edges","_this$props$pageConte","TwoColumnLayout","fontFamily","SEO","article","desc","pathname","map","key","node","id","marginBottom","PostSummary","gatsby__WEBPACK_IMPORTED_MODULE_1__","slice","length","link","index"],"mappings":"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","file":"component---src-templates-list-tag-template-js-47ec18f068cd780ab8d1.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport Breadcrumb from '../components/Breadcrumb/Breadcrumb'\nimport BlogList from '../components/PostList/BlogList'\n\nconst ListTagTemplate = props => {\n  const { tag } = props.pageContext\n  const { totalCount } = props.data.allMarkdownRemark\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? '' : 's'\n  } tagged with \"${tag}\"`\n\n  return (\n    <BlogList\n      data={props.data}\n      pageContext={props.pageContext}\n      location={props.location}\n      topContent={\n        <React.Fragment>\n          <Breadcrumb\n            links={[\n              {\n                url: '/',\n                label: 'root',\n              },\n              {\n                url: '/blog',\n                label: 'blog',\n              },\n              {\n                url: '#',\n                label: `tagged with \"${tag}\"`,\n              },\n            ]}\n          />\n          <h1>{tagHeader}</h1>\n        </React.Fragment>\n      }\n    />\n  )\n}\n\nexport default ListTagTemplate\n\nexport const pageQuery = graphql`\n  query($tag: String, $limit: Int!, $skip: Int!) {\n    site {\n      siteMetadata {\n        title\n        description\n        blogTitle\n        blogSlogan\n      }\n    }\n\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n      limit: $limit\n      skip: $skip\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          excerpt\n          fields {\n            slug\n          }\n          timeToRead\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            tags\n            category\n            thumbnail\n            spoiler\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport '../../styles/index.scss'\nimport { Link } from 'gatsby'\n\nclass Tag extends React.Component {\n  render() {\n    return (\n      <span className=\"badge tag\">\n        {this.props.external ? (\n          <a\n            href={this.props.url}\n            target=\"_blank\"\n            style={{\n              textDecoration: 'none',\n              color: 'inherit',\n            }}\n          >\n            {this.props.tag}\n          </a>\n        ) : (\n          <Link\n            to={this.props.url || `/blog/tags/${this.props.tag}`}\n            style={{\n              textDecoration: 'none',\n              color: 'inherit',\n            }}\n          >\n            {this.props.tag}\n          </Link>\n        )}\n      </span>\n    )\n  }\n}\n\nexport default Tag\n","import React from 'react'\nimport Tag from '../Tag/Tag'\nimport { Link } from 'gatsby'\nimport '../../styles/post.scss'\n\nclass Summary extends React.Component {\n  render() {\n    const { post } = this.props\n    const title = post.frontmatter.title || post.fields.slug\n    return (\n      <div className=\"card postPreview\">\n        <div className=\"card-content flex1\">\n          <h3 className=\"postPreviewHeading\">\n            <Link to={post.fields.slug}>{title}</Link>\n          </h3>\n\n          <small>\n            {post.frontmatter.date} in{' '}\n            <Link to={`/blog/categories/${post.frontmatter.category}`}>\n              {post.frontmatter.category}\n            </Link>\n            {` • ${post.timeToRead} min read`}\n          </small>\n\n          <p>{post.frontmatter.spoiler}</p>\n\n          <div style={{ margin: '1rem 0' }}>\n            <Link to={post.fields.slug}>Read More </Link>▸\n          </div>\n        </div>\n        <div className=\"postPreviewThumbnail leftRoundedImage flex0\">\n          <Link to={post.fields.slug}>\n            <div\n              className=\"leftRoundedImage backgroundCover sizeFull\"\n              style={{\n                backgroundImage: `url(${post.frontmatter.thumbnail})`,\n              }}\n            />\n          </Link>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Summary\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport '../../styles/index.scss'\n\nconst renderButton = (context, dir) => {\n  if (!context || !context.url)\n    return <span className=\"dimText\">{context.label}</span>\n  return (\n    <Link to={context.url} rel=\"prev\">\n      {dir === 'left' ? (\n        <div>\n          <i className={`fa fa-angle-${dir}`} />\n          &nbsp;\n          {context.label}\n        </div>\n      ) : (\n        <div>\n          {context.label}\n          &nbsp;\n          <i className={`fa fa-angle-${dir}`} />\n        </div>\n      )}\n    </Link>\n  )\n}\n\nexport default props => {\n  const { previous, next, current, total } = props\n  if (current === 1 && total === 1) return null\n\n  return (\n    <ul className=\"unorderedList\">\n      <li className=\"inlineListItem\">{renderButton(previous, 'left')}</li>\n      {current && total && (\n        <li className=\"inlineListItem\">{`${current} of ${total}`}</li>\n      )}\n      <li className=\"inlineListItem\">{renderButton(next, 'right')}</li>\n    </ul>\n  )\n}\n","import React from 'react'\nimport SEO from '../seo/SEO'\nimport TwoColumnLayout from '../layouts/TwoColumnLayout'\nimport Pagination from '../Pagination/Pagination'\nimport PostSummary from '../PostSummary/PostSummary'\nimport '../../styles/index.scss'\n\nclass BlogList extends React.Component {\n  render() {\n    const { data } = this.props\n    const { blogTitle, blogSlogan, author } = data.site.siteMetadata\n    const posts = data.allMarkdownRemark.edges\n    const { previous, next, current, total } = this.props.pageContext\n\n    return (\n      <TwoColumnLayout\n        location={this.props.location}\n        title={\n          <div\n            style={{\n              fontFamily: 'monospace',\n            }}\n          >\n            {'<Learning in public/>'}\n          </div>\n        }\n      >\n        <SEO\n          article={false}\n          title={`${blogTitle} - ${blogSlogan}`}\n          desc={`${blogSlogan}`}\n          pathname={this.props.location.pathname}\n        />\n\n        <div>{this.props.topContent ? this.props.topContent : null}</div>\n\n        <div>\n          {posts.map(post => {\n            return (\n              <div\n                key={post.node.id}\n                style={{\n                  marginBottom: '1em',\n                }}\n              >\n                <PostSummary post={post.node} />\n              </div>\n            )\n          })}\n        </div>\n\n        <Pagination\n          previous={{\n            url: previous,\n            label: 'Previous',\n          }}\n          next={{\n            url: next,\n            label: 'Next',\n          }}\n          current={current}\n          total={total}\n        />\n      </TwoColumnLayout>\n    )\n  }\n}\n\nexport default BlogList\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport '../../styles/index.scss'\n\nexport default props => {\n  const { links } = props\n\n  return (\n    <ul className=\"unorderedList badge\">\n      {links.slice(0, links.length - 1).map((link, index) => (\n        <li className=\"inlineListItem\" key={index}>\n          <Link to={link.url}>{link.label}</Link>&nbsp;\n          <i className=\"fa fa-angle-right\" />\n        </li>\n      ))}\n      <li className=\"inlineListItem\">{links[links.length - 1].label}</li>\n    </ul>\n  )\n}\n"],"sourceRoot":""}