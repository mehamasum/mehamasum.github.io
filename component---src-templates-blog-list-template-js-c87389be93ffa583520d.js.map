{"version":3,"sources":["webpack:///./src/templates/BlogListTemplate.js","webpack:///./src/components/Tag/Tag.js","webpack:///./src/components/PostSummary/PostSummary.js","webpack:///./src/components/Pagination/Pagination.js","webpack:///./src/components/PostList/BlogList.js"],"names":["BlogListTemplate","render","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_PostList_BlogList__WEBPACK_IMPORTED_MODULE_3__","data","this","props","pageContext","location","React","Component","blogListQuery","Tag","className","external","href","url","target","style","textDecoration","color","tag","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","Summary","post","title","frontmatter","fields","slug","date","category","timeToRead","spoiler","margin","backgroundImage","thumbnail","renderButton","context","dir","react_default","gatsby_browser_entry","rel","label","Pagination","previous","next","current","total","BlogList","_data$site$siteMetada","site","siteMetadata","blogTitle","blogSlogan","posts","author","allMarkdownRemark","edges","_this$props$pageConte","TwoColumnLayout","fontFamily","SEO","article","desc","pathname","topContent","map","key","node","id","marginBottom","PostSummary"],"mappings":"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","file":"component---src-templates-blog-list-template-js-c87389be93ffa583520d.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport '../styles/index.scss'\nimport BlogList from '../components/PostList/BlogList'\n\nclass BlogListTemplate extends React.Component {\n  render() {\n    return (\n      <BlogList\n        data={this.props.data}\n        pageContext={this.props.pageContext}\n        location={this.props.location}\n      />\n    )\n  }\n}\n\nexport default BlogListTemplate\n\nexport const blogListQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n        description\n        blogTitle\n        blogSlogan\n      }\n    }\n\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          excerpt\n          fields {\n            slug\n          }\n          timeToRead\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            tags\n            category\n            thumbnail\n            spoiler\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport '../../styles/index.scss'\nimport { Link } from 'gatsby'\n\nclass Tag extends React.Component {\n  render() {\n    return (\n      <span className=\"badge tag\">\n        {this.props.external ? (\n          <a\n            href={this.props.url}\n            target=\"_blank\"\n            style={{\n              textDecoration: 'none',\n              color: 'inherit',\n            }}\n          >\n            {this.props.tag}\n          </a>\n        ) : (\n          <Link\n            to={this.props.url || `/blog/tags/${this.props.tag}`}\n            style={{\n              textDecoration: 'none',\n              color: 'inherit',\n            }}\n          >\n            {this.props.tag}\n          </Link>\n        )}\n      </span>\n    )\n  }\n}\n\nexport default Tag\n","import React from 'react'\nimport Tag from '../Tag/Tag'\nimport { Link } from 'gatsby'\nimport '../../styles/post.scss'\n\nclass Summary extends React.Component {\n  render() {\n    const { post } = this.props\n    const title = post.frontmatter.title || post.fields.slug\n    return (\n      <div className=\"card postPreview\">\n        <div className=\"card-content flex1\">\n          <h3 className=\"postPreviewHeading\">\n            <Link to={post.fields.slug}>{title}</Link>\n          </h3>\n\n          <small>\n            {post.frontmatter.date} in{' '}\n            <Link to={`/blog/categories/${post.frontmatter.category}`}>\n              {post.frontmatter.category}\n            </Link>\n            {` • ${post.timeToRead} min read`}\n          </small>\n\n          <p>{post.frontmatter.spoiler}</p>\n\n          <div style={{ margin: '1rem 0' }}>\n            <Link to={post.fields.slug}>Read More </Link>▸\n          </div>\n        </div>\n        <div className=\"postPreviewThumbnail leftRoundedImage flex0\">\n          <Link to={post.fields.slug}>\n            <div\n              className=\"leftRoundedImage backgroundCover sizeFull\"\n              style={{\n                backgroundImage: `url(${post.frontmatter.thumbnail})`,\n              }}\n            />\n          </Link>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Summary\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport '../../styles/index.scss'\n\nconst renderButton = (context, dir) => {\n  if (!context || !context.url)\n    return <span className=\"dimText\">{context.label}</span>\n  return (\n    <Link to={context.url} rel=\"prev\">\n      {dir === 'left' ? (\n        <div>\n          <i className={`fa fa-angle-${dir}`} />\n          &nbsp;\n          {context.label}\n        </div>\n      ) : (\n        <div>\n          {context.label}\n          &nbsp;\n          <i className={`fa fa-angle-${dir}`} />\n        </div>\n      )}\n    </Link>\n  )\n}\n\nexport default props => {\n  const { previous, next, current, total } = props\n  if (current === 1 && total === 1) return null\n\n  return (\n    <ul className=\"unorderedList\">\n      <li className=\"inlineListItem\">{renderButton(previous, 'left')}</li>\n      {current && total && (\n        <li className=\"inlineListItem\">{`${current} of ${total}`}</li>\n      )}\n      <li className=\"inlineListItem\">{renderButton(next, 'right')}</li>\n    </ul>\n  )\n}\n","import React from 'react'\nimport SEO from '../seo/SEO'\nimport TwoColumnLayout from '../layouts/TwoColumnLayout'\nimport Pagination from '../Pagination/Pagination'\nimport PostSummary from '../PostSummary/PostSummary'\nimport '../../styles/index.scss'\n\nclass BlogList extends React.Component {\n  render() {\n    const { data } = this.props\n    const { blogTitle, blogSlogan, author } = data.site.siteMetadata\n    const posts = data.allMarkdownRemark.edges\n    const { previous, next, current, total } = this.props.pageContext\n\n    return (\n      <TwoColumnLayout\n        location={this.props.location}\n        title={\n          <div\n            style={{\n              fontFamily: 'monospace',\n            }}\n          >\n            {'<Learning in public/>'}\n          </div>\n        }\n      >\n        <SEO\n          article={false}\n          title={`${blogTitle} - ${blogSlogan}`}\n          desc={`${blogSlogan}`}\n          pathname={this.props.location.pathname}\n        />\n\n        <div>{this.props.topContent ? this.props.topContent : null}</div>\n\n        <div>\n          {posts.map(post => {\n            return (\n              <div\n                key={post.node.id}\n                style={{\n                  marginBottom: '1em',\n                }}\n              >\n                <PostSummary post={post.node} />\n              </div>\n            )\n          })}\n        </div>\n\n        <Pagination\n          previous={{\n            url: previous,\n            label: 'Previous',\n          }}\n          next={{\n            url: next,\n            label: 'Next',\n          }}\n          current={current}\n          total={total}\n        />\n      </TwoColumnLayout>\n    )\n  }\n}\n\nexport default BlogList\n"],"sourceRoot":""}